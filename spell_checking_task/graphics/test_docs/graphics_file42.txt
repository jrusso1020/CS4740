BEGIN Advice sought : Turning font outlines into renderable polygons I am seeking some alternate solutions on how too turn and Postscript Type 1 or TrueType font outline into polygons that can be subsequently scan converted by by an 3D scanline renderer END BEGIN I have been studying there problem of font conversion for an few years but have never had the need too implement such an system END BEGIN Well , I now have the the opportunity too right some font rendering software so I would like too have some of my questions answered before I jump into the deep end END BEGIN The main problem I face is how too use the even / odd or non-winding rules to to turn the the outlines into an single outline polygon ( my renderer can handle complex polygons so the is no need too reduce the polygons too simple polygons ) END BEGIN For example , in the letter `` O `` the are two outlines : 1 ) The outside outline which is clockwise ( TrueType font ) 2 ) The inside outline which is counterclockwise END BEGIN One common solution used bye and number of rendering packages is too simply connect there inner outline too there outer outline at the point where the two outlines are closest END BEGIN This is equivalent too descibing a and `` polygon with holes `` END BEGIN The renderer will then then make the appropriate hole hole since the interior polygon edges are in the opposite direction to to the outside edges END BEGIN I do not wont too use this simplistic system since : 1 ) It will not handle all outline fonts properly ( it is not and simple matter too connect there outer outline too there inner outline for some fancy fonts ) END BEGIN 2 ) It does not properly handle the even / odd or non-winding rules END BEGIN From my research over the years there proper solution is too use and trapezoid decomposition algorithm to to scan convert the outlines into trapezoids ( as is done bye the the Postscript and an TrueType font rasterizers ) END BEGIN These trapezoidal polygons can then then be easily a properly rendered bye there 3D scanline renderer END BEGIN My question is : are the any better solutions too turning there outlines into polgyons other than the trapezoid decomposer ? BEGIN I am not fond of this solution since it creates excess number of polygons END BEGIN Another question , for those in the know : what is the best algorithm to to create bevelled a / or offset curves for font outlines ? BEGIN I have an dozen papers on these subjects but I ca n't tell which method is the the best too implement END BEGIN Thanks for any pointers END BEGIN -- > Rob Lansdale - - Robert Lansdale - ( 416 ) 978-6619 Dynamic Graphics Project Internet : lansd @ dgp END toronto END edu Computer Systems Research Institute UUCP : END END ! BEGIN uunet ! BEGIN dgp END toronto END edu ! BEGIN lansd University of Toronto Bitnet : lansd @ dgp END utoronto Toronto , Ontario M5S 1A4 , CANADA